function(xnb_add_plugin PluginName dirname)
  # Backward compatibility trick : we used to automaticaly add exanbCore to link libraries
  if("${PluginName}" STREQUAL "exanbCore")
    # Tell Onika to duplicate type name definitions to exanb namespace, so that we don't have to rewite all the code by now
    list(APPEND ${PluginName}_COMPILE_DEFINITIONS ONIKA_PACKAGE_NAME=${XNB_APP_NAME} ONIKA_LOG_EXPORT_NAMESPACE=exanb ONIKA_MATH_EXPORT_NAMESPACE=exanb ONIKA_SCG_EXPORT_NAMESPACE=exanb)
  else()
    list(APPEND ${PluginName}_LINK_LIBRARIES exanbCore)
  endif()

  onika_add_plugin(${PluginName} ${dirname})
  
  unset(GVFILES)
  foreach(SRC ${${PluginName}_SCRS})
    file(READ ${SRC} SRC_CONTENT)
    string(REGEX MATCH "OperatorNodeFactory::instance.*register_factory.*make_grid_variant_operator" SRCGV "${SRC_CONTENT}")
    if(SRCGV)
      list(APPEND GVFILES ${SRC})
    endif()
  endforeach()

  if(GVFILES OR ${PluginName}_SHARED_LIB)
    file(APPEND ${XNB_CMAKE_PACKAGE} "\n# Configuration of exaNBody's ${PluginName} component\n")
    file(APPEND ${XNB_CMAKE_PACKAGE} "set(XNB_BUILD_${PluginName} ON)\n")

    
    if(${PluginName}_INCLUDE_DIRS AND NOT ${PluginName}_DONT_EXPORT_INCLUDE_DIRS)
      file(APPEND ${XNB_CMAKE_PACKAGE} "set(${PluginName}_INCLUDE_DIRS ${${PluginName}_INCLUDE_DIRS})\n")
    endif()
    
    file(APPEND ${XNB_CMAKE_PACKAGE} "set(${PluginName}_COMPILE_DEFINITIONS ONIKA_PACKAGE_OVERRIDE=\${XNB_APP_NAME})\n")
    foreach(DEF ${${PluginName}_COMPILE_DEFINITIONS})
      file(APPEND ${XNB_CMAKE_PACKAGE} "list(APPEND ${PluginName}_COMPILE_DEFINITIONS \"${DEF}\")\n")
    endforeach()

    if(${PluginName}_COMPILE_OPTIONS)
       file(APPEND ${XNB_CMAKE_PACKAGE} "set(${PluginName}_COMPILE_OPTIONS ${${PluginName}_COMPILE_OPTIONS})\n")
    endif() 
    if(${PluginName}_COMPILE_FEATURES)
      file(APPEND ${XNB_CMAKE_PACKAGE} "set(${PluginName}_COMPILE_FEATURES ${${PluginName}_COMPILE_FEATURES})\n")
    endif() 
    if(${PluginName}_LINK_DIRECTORIES)
      file(APPEND ${XNB_CMAKE_PACKAGE} "set(${PluginName}_LINK_DIRECTORIES ${${PluginName}_LINK_DIRECTORIES})\n")
    endif() 
    if(${PluginName}_LINK_LIBRARIES)
      file(APPEND ${XNB_CMAKE_PACKAGE} "set(${PluginName}_LINK_LIBRARIES ${${PluginName}_LINK_LIBRARIES})\n")
    endif()    
    if(${PluginName}_EXTERNAL_SRCS)
      file(APPEND ${XNB_CMAKE_PACKAGE} "set(${PluginName}_EXTERNAL_SRCS ${${PluginName}_EXTERNAL_SRCS})\n")
    endif()    
    if(${PluginName}_CUSTOM_CMAKE)
      install(FILES ${${PluginName}_CUSTOM_CMAKE} DESTINATION ${CMAKE_INSTALL_PREFIX}/redist/${PluginName})
      file(APPEND ${XNB_CMAKE_PACKAGE} "set(${PluginName}_CUSTOM_CMAKE ${CMAKE_INSTALL_PREFIX}/redist/${PluginName}/${PluginName}.cmake)\n")
    endif()
  endif()

  if(${PluginName}_SHARED_LIB)
    file(APPEND ${XNB_CMAKE_PACKAGE} "\n# Import of exaNBody's ${PluginName} shared library\n")
    if(${PluginName}_SHARED_LIB_INTERFACE)
      #file(APPEND ${XNB_CMAKE_PACKAGE} "message(STATUS \"import interface library ${${PluginName}_SHARED_LIB}\")\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "add_library(${${PluginName}_SHARED_LIB} INTERFACE)\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "target_include_directories(${${PluginName}_SHARED_LIB} INTERFACE \${${PluginName}_INCLUDE_DIRS} ${CMAKE_INSTALL_PREFIX}/include)\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "target_compile_definitions(${${PluginName}_SHARED_LIB} INTERFACE \${${PluginName}_COMPILE_DEFINITIONS})\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "target_compile_features(${${PluginName}_SHARED_LIB} INTERFACE \${${PluginName}_COMPILE_FEATURES})\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "target_link_directories(${${PluginName}_SHARED_LIB} INTERFACE \${ONIKA_LIBRARY_DIRS} \${${PluginName}_LINK_DIRECTORIES})\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "target_link_libraries(${${PluginName}_SHARED_LIB} INTERFACE \${ONIKA_LIBRARIES} \${${PluginName}_LINK_LIBRARIES})\n")
    else()
      #file(APPEND ${XNB_CMAKE_PACKAGE} "message(STATUS \"import shared library ${${PluginName}_SHARED_LIB}\")\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "add_library(${${PluginName}_SHARED_LIB} SHARED IMPORTED GLOBAL)\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "set_target_properties(${${PluginName}_SHARED_LIB} PROPERTIES IMPORTED_CONFIGURATIONS Release)\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "set_target_properties(${${PluginName}_SHARED_LIB} PROPERTIES IMPORTED_LOCATION_RELEASE ${CMAKE_INSTALL_PREFIX}/lib/lib${${PluginName}_SHARED_LIB}.so)\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "target_include_directories(${${PluginName}_SHARED_LIB} INTERFACE \${ONIKA_INCLUDE_DIRS} \${${PluginName}_INCLUDE_DIRS} ${CMAKE_INSTALL_PREFIX}/include)\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "target_compile_definitions(${${PluginName}_SHARED_LIB} INTERFACE \${ONIKA_COMPILE_DEFINITIONS} \${${PluginName}_COMPILE_DEFINITIONS})\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "target_compile_options(${${PluginName}_SHARED_LIB} INTERFACE \${ONIKA_COMPILE_OPTIONS} \$<\$<COMPILE_LANGUAGE:CUDA>:\${ONIKA_CUDA_COMPILE_FLAGS}> \$<\$<COMPILE_LANGUAGE:HIP>:\${ONIKA_HIP_COMPILE_FLAGS}> \${${PluginName}_COMPILE_OPTIONS})\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "target_compile_features(${${PluginName}_SHARED_LIB} INTERFACE \${ONIKA_COMPILE_FEATURES} \${${PluginName}_COMPILE_FEATURES})\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "target_link_directories(${${PluginName}_SHARED_LIB} INTERFACE \${ONIKA_LIBRARY_DIRS} \${${PluginName}_LINK_DIRECTORIES})\n")
      file(APPEND ${XNB_CMAKE_PACKAGE} "target_link_libraries(${${PluginName}_SHARED_LIB} INTERFACE \${ONIKA_LIBRARIES} \${${PluginName}_LINK_LIBRARIES})\n")
    endif()
    file(APPEND ${XNB_CMAKE_PACKAGE} "set(${PluginName}_SHARED_LIB ${${PluginName}_SHARED_LIB})\n")
    set(${PluginName}_SHARED_LIB ${${PluginName}_SHARED_LIB} PARENT_SCOPE)
  endif()

  if(${PluginName}_PLUGIN_LIB)
    set(${PluginName}_PLUGIN_LIB ${${PluginName}_PLUGIN_LIB} PARENT_SCOPE)
  endif()

  if(GVFILES AND NOT ${PluginName}_DISABLE_GRID_SPECIALIZATION)
    # message(STATUS "redistrbute source files of ${PluginName} for later specialization")
    install(FILES ${GVFILES} DESTINATION ${CMAKE_INSTALL_PREFIX}/redist/${PluginName})
    file(GLOB ${PluginName}_HDRS ${dirname}/*.h)
    if(${PluginName}_HDRS)
      install(FILES ${${PluginName}_HDRS} DESTINATION ${CMAKE_INSTALL_PREFIX}/redist/${PluginName})
    endif()
    file(APPEND ${XNB_CMAKE_PACKAGE} "\n# Grid templated part of exaNBody's ${PluginName} plugin\n")
    file(APPEND ${XNB_CMAKE_PACKAGE} "if(XNB_APP_HAS_GRID_SPECIALIZATIONS)\n")  
    file(APPEND ${XNB_CMAKE_PACKAGE} "  onika_add_plugin(${PluginName} ${CMAKE_INSTALL_PREFIX}/redist/${PluginName} -\${XNB_APP_NAME}-plugin)\n")
    file(APPEND ${XNB_CMAKE_PACKAGE} "endif()\n")  
  endif()
endfunction()
